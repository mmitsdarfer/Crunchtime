The what (my original idea):
- A program that scrapes the scores of multiple sports games and gives the link to the closest score. If multiple with same score delta, closest to the end of game or highest in standings
- It refreshes the scores every [set time period] but when you click "It's a commercial!" it refreshes and takes you to the next game

known errors:
- games ended in SO have progress ended but timeRank is treated like they're ongoing
- when cookies don't exist they can only be created on home page & /preferences, but /preferences doesn't populate dropdowns
   until refreshing
- still get:
   "if((time[2].includes('OT')))
                  ^
   TypeError: Cannot read properties of undefined (reading 'includes') "
         I think this is when period or quarter is shown without "End of" (eg "3rd" on its own)
            Use NaN and length so if it's just 3rd (for example) vs 3:01 - 3rd I can differentiate (?)
- rapidly refreshing no longer creates duplicates, but too many requests causes timeout and kills program
   - Maybe add some timeout like with getCookies() in server.js
- when some games have channel links and others don't the columns become misaligned
   - This pops up most when some games are ended
      - Just create empty object (div?) to keep spacing consistent

To do:
- Iron out when to split by progress if not sorting by time
   - Sorting by standings isn't split into progresses. Should it be and/or should diffs of ongoing and ended be mixed together when sorting by diffs
- Add favorite teams(?)
- Switch to for-of loops if applicable
- See if specific errors above still exist
- getCookies is kind of repeated in calls to league pages because each cookie is collected again
- Revisit MLB after spring training
- Move the html conversion(s) in server.js to a new js file
- Look into react (base on platform computing work?)
   - Would want all the scores to update at once because element by element would show repeats
   - Could use to remake preferences to update hits with less code
- Show previous json data on webpage, scrape and update json, repeat (?)
   - So, in server if [league].json already exists write that with jsonHtml then scrape (?)
   - Maybe if I really can't get it to load dynamically
- Update readme
- See what happens when cookies don't yet exist
   - They can only be created in home page or with a delay in /preference
- (do if any new links show up) Add streaming/other online links for non-NHL sports
   - When Flyers are on national broadcasts replace NBCSP link
      - Think I did this
- Add timer to auto refresh 
   - Run scrape in the background on its own and have refresh just implement those scraped values
      - Do I want to refresh the page (and in turn data) without clicking refresh?
 - Add team logos
 - (Evergreen) Document code and get rid of unneeded parts
- Check out bootstrap for cleaner UI (?)
   - At least change fonts
      - Make dropdown same as everything else?
   - Use platform computing notes for a guide
   - https://bootstrapshuffle.com/classes
- Host on netlify or simlar?
- Pie in the sky/longterm:   
   - Combine multiple sports 
      - Would need diffs to be to scale because 3 pt football game != 3 goal hockey game
      - Or could show the 1st of each sport, then the 2nd of each, and so on
   - Split into separate files (?)
   - Some people preach against for loops so maybe try forEach, map, and/or filter
      - Idk if it's actually not great to use and this is a small dataset so probs not worth it

To do but this time it's specific:
1. Follow link
2. Figure out how to update scores when they load
3. Fix known errors

WIWWO: 
3/17: Got takeMe working and links matching up and merged
3/8: Gonna wait until regular season to revisit MLB because only spring standings are by grapefruit/cactus leagues
      -> All standRanks are higher than number of teams
3/7: All the mlb games are in right place w/ postponed and canceled, so problem must be in finalSort/endedSort
   as of ~9pm allSorted works for time-diff-stand and diff-time-stand but not stand-x-x or x-stand-x
   -> 3/8: All combos working currently w/ allSorted but I've changed nothing
      -> probably just no ties while sorting
2/8: Wanna use how preferences.html is updated with zeros to show scores as they load. Might be tricky
since I can't use require
   -> This method might not be possible because idk how I'd trigger the update from the html
      -> Refresh button gets the scores but still has to wait
   -> What about updating a cookie after scrape is done and have html constantly checking for that cookie?
      -> Wouldn't want scores to be on cookie tho. Too much info and formatting concerns
      -> But if a scoresUpdated cookie exists, how would it get scores?


Using git:
1. Make changes to code
2. Commit
3. Branch -> merge
4. Compare and confirm merge/pull