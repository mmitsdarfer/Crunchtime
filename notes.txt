The what (my original idea):
- A program that scrapes the scores of multiple sports games and gives the link to the closest score. If multiple with same score delta, closest to the end of game or highest in standings
- It refreshes the scores every [set time period] but when you click "It's a commercial!" it refreshes and takes you to the next game

known errors:
1 clicking logo fails to fetch sometimes
   - just occasionally really slow
      - every time I try to fix this it stops happening or at least isn't as slow as before 
         - this is because opening devtools changes how it loads
   - curious if this happens on my desktop...could be a RAM thing (?)
2 double db entries were sometimes being created...possibly fixed

To do:
1 Fetch POST instead of cookies (?)
2 See if timezones matter for mongodb vs new Date
3 instead of delete and create in database.js, figure out update
4 add NBC
(Evergreen) Document code and check for unneeded parts
(Evergreen) See if specific errors above still exist
(Evergreen) Update readme
(Evergreen/do if any new links show up) Add streaming/other online links
- Pie in the sky/longterm:   
   - Add upcoming days
   - Combine multiple sports 
      - Would need diffs to be to scale because 3 pt football game != 3 goal hockey game
      - Or could show the 1st of each sport, then the 2nd of each, and so on
   - Add favorite teams(?)
      - Might make sense to wait until adding multiple sports
   - Don't re-scrape ended games to improve efficiency (?)
   - Host on netlify or simlar (?) 
      -> Scott said AWS
   - Let user enter their local streams (?)
   - Add login for each user's preferences

Recently completed (since last push, so put in commit msg):
Added mongodb server

To do but it's specific:   
Use mongodb data to update react pages, not json
Test that new leagueDate creates new db entry

WIWWO: 
5/25: replacing jsons with dbs
      -> added leagueDate to sort by

Deploying to web things:
Mapping out database things:
   1) READ from league db
   2a) if entry for current date UPDATE
   2b) if no entry for current date CREATE

Odds, ends, and reminders
   Using git:
   1. Make changes to code
   2. Commit
   3. Branch -> merge
   4. Compare and confirm merge/pull

   When using res (like updating cookies) must eventually send res for it to be updated

