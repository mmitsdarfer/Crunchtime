The what (my original idea):
- A program that scrapes the scores of multiple sports games and gives the link to the closest score. If multiple with same score delta, closest to the end of game or highest in standings
- It refreshes the scores every [set time period] but when you click "It's a commercial!" it refreshes and takes you to the next game

known errors:
- get rid of everything from old sort and scrape
- games ended in SO have progress ended but timeRank is treated like they're ongoing
- when cookies don't exist they can only be created on home page & /preferences, but /preferences doesn't populate dropdowns
   until refreshing
- still get:
   "if((time[2].includes('OT')))
                  ^
   TypeError: Cannot read properties of undefined (reading 'includes') "
         I think this is when period or quarter is shown without "End of" (eg "3rd" on its own)
            Use NaN and length so if it's just 3rd (for example) vs 3:01 - 3rd I can differentiate (?)
- 'hidden.json' created randomly and/or when all jsons are first made
   - I believe this was fixed while fixing standings calls for league == hidden
- rapidly refreshing (before puppeteer can finish scraping) creates duplicates of all the game data
   - Maybe add some timeout like with getCookies() in server.js
- when some games have channel links and others don't the columns become misaligned
   - This pops up most when some games are ended
      - Just create empty object (div?) to keep spacing consistent

To do:
- Look into react (base of platform computing work?)
- Instead of loading standings each time, if standings exist and has been update in past [time period] use that (?)
- Display standings (?)
- Show previous json data on webpage, scrape and update json, repeat (?)
   - So, in server if [league].json already exists write that with jsonHtml then scrape (?)
   - Maybe if I really can't get it to load dynamically
- Update readme
- See what happens when cookies don't yet exist
   - They can only be created in home page or with a delay in /preference
- (do if any new links show up) Add streaming/other online links for non-NHL sports
   - When Flyers are on national broadcasts replace NBCSP link
- Scrape each league from the home page so at least some data is ready for when that page opens?
   - Use the preferences json to just scrape top league? Or in order from most visited to least?
   - Have to make sure it's sequential because overlap messes up the data
- Add timer to auto refresh 
   - Run scrape in the background on its own and have refresh just implement those scraped values
      - Do I want to refresh the page (and in turn data) without clicking refresh?
 - Add team logos
 - (Evergreen) Document code and get rid of unneeded parts
- Check out bootstrap for cleaner UI
   - At least change fonts
      - Make dropdown same as everything else?
   - Use platform computing notes for a guide
   - https://bootstrapshuffle.com/classes
- Sometimes NBA does have channels, so check for channel instead of a whole league either having them or not
   - Spring training mlb doesn't have channels but I think regular season will, so def need to implement this
- Make nested for loops consistent; most go i then j, so make them all do that (for readability and consistency)
- Host on netlify or simlar?
- Pie in the sky/longterm:   
   - Try to scrape ESPN for channel links so it actually goes to the game, not just to streamer landing page
      - Add option to automatically follow link to closest game (in new tab)
      - Add to switch to preferences
   - Combine multiple sports 
      - Would need diffs to be to scale because 3 pt football game != 3 goal hockey game
      - Or could show the 1st of each sport, then the 2nd, and so on
   - Some people preach against for loops so maybe try forEach, map, and/or filter
      - Idk if it's actually not great to use and this is a small dataset so probs not worth it

To do but this time it's specific:
1. implement flexible priorities for all combinations and merge with main
2. Figure out how to update scores when they load

WIWWO: 
2/28: everything works...idk what the problem was before
2/8: Wanna use how preferences.html is updated with zeros to show scores as they load. Might be tricky
since I can't use require
   -> This method might not be possible because idk how I'd trigger the update from the html
      -> Refresh button gets the scores but still has to wait
   -> What about updating a cookie after scrape is done and have html constantly checking for that cookie?
      -> Wouldn't want scores to be on cookie tho. Too much info and formatting concerns
      -> But if a scoresUpdated cookie exists, how would it get scores?


Using git:
1. Make changes to code
2. Commit
3. Branch -> merge
4. Compare and confirm merge/pull